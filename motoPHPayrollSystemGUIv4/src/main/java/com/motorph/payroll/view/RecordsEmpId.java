/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.motorph.payroll.view;

import com.motorph.payroll.controller.AttendanceController;
import com.motorph.payroll.controller.EmployeeController;
import com.motorph.payroll.controller.PayrollController;
import com.motorph.payroll.dao.AttendanceDao;
import com.motorph.payroll.dao.DaoFactory;
import com.motorph.payroll.dao.EmployeeDao;
import com.motorph.payroll.exception.EmployeeNotFoundException;
import com.motorph.payroll.model.Attendance;
import com.motorph.payroll.model.Employee;
import com.motorph.payroll.model.PayrollSummary;
import com.motorph.payroll.service.AttendanceService;
import com.motorph.payroll.service.AttendanceServiceImpl;
import com.motorph.payroll.service.EmployeeService;
import com.motorph.payroll.service.EmployeeServiceImpl;
import com.motorph.payroll.util.DateTimeUtil;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Arvee
 */
public class RecordsEmpId extends javax.swing.JFrame {

    private PayrollView view;
    private EmployeeController employeeController;
    private AttendanceController attendanceController;
    private PayrollController payrollController;
    
    private LocalDate startDate, endDate;
    /**
     * Creates new form RecordsEmpId
     */
    public RecordsEmpId() { 
        initComponents();
    }
    
    public RecordsEmpId(PayrollView view,EmployeeController employeeController, AttendanceController attendanceController, PayrollController payrollController) {
        initComponents();
        
        // to make the window center on the screen.
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
       
        this.view = view;
        this.employeeController = employeeController;
        this.attendanceController = attendanceController;
        this.payrollController = payrollController;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empIdText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        empIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empIdTextActionPerformed(evt);
            }
        });

        jLabel1.setText("ENNTER EMPLOYEE ID:");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1)
                    .addComponent(empIdText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void empIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empIdTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int empId = Integer.parseInt(empIdText.getText());
        
        try {
            Employee employee = employeeController.getEmployeeById(empId);
            List<Attendance> employeeAttendance = attendanceController.getAttendanceByEmployeeId(empId);
            
            if (employeeAttendance.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No attendance records found for this employee.", "No Records Found", JOptionPane.ERROR_MESSAGE);
                // view.displayMessage("No attendance records found for this employee.");
                return;
            }
            
            // View all attendance records
            LocalDate minDate = employeeAttendance.stream()
                .map(Attendance::getDate)
                .min(LocalDate::compareTo)
                .orElse(LocalDate.now());

            LocalDate maxDate = employeeAttendance.stream()
                .map(Attendance::getDate)
                .max(LocalDate::compareTo)
                .orElse(LocalDate.now());
            PayrollSummary payrollSummaryAll = payrollController.calculatePayroll(employee, minDate, maxDate);
            
            // Start the Choices
            new RecordsChoices(view, employee, payrollSummaryAll, attendanceController, payrollController).setVisible(true);
            this.dispose();
            
        } catch (EmployeeNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Employee not found! Please check the ID and try again.", "Not Found", JOptionPane.ERROR_MESSAGE);
            // view.displayMessage("Employee not found! Please check the ID and try again.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecordsEmpId.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecordsEmpId.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecordsEmpId.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecordsEmpId.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecordsEmpId().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField empIdText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
